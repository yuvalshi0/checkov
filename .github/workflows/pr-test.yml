name: PR Test

on: 
  workflow_dispatch:
  pull_request:

permissions:
  contents: read

jobs:
  unit-tests-yuval:
    strategy:
      fail-fast: false
      matrix:
        python: [ "3.12"]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v3
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c  # v4
        with:
          python-version: ${{ matrix.python }}
          allow-prereleases: true
          cache: "pipenv"
          cache-dependency-path: "Pipfile.lock"
      - uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78  # v3

      - name: install kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
          sudo mv kustomize /usr/local/bin/

      - name: Install pipenv
        run: |
          python -m pip install --no-cache-dir --upgrade pipenv
      - name: Install dependencies
        run: |
          # remove venv, if exists
          pipenv --rm || true
          pipenv --python ${{ matrix.python }}

          if [ '${{ matrix.python }}' == '3.12' ]; then
            # needed for numpy
            pipenv install --skip-lock --dev -v
          else
            pipenv install --dev -v
          fi

          # list all dependencies to get a better view about installed package versions
          pipenv run pip list

      - name: Get venv path
        id: get-venv
        run: |
          echo "venv=$(pipenv --venv)" >> "$GITHUB_OUTPUT"
          echo "some change"

      - name: Run Redefine.dev
        uses: redefinedev/redefine-action@main
        with:
          auth: ${{ secrets.REDEFINE_AUTH }}
          python-venv-path: ${{ steps.get-venv.outputs.venv }}
          testing-framework: pytest
          # mode is "discover" if github.ref is "refs/heads/main" otherwise it's the value of inputs.redefine-mode
          time-limit: 10
          mode: fail-fast
          config-args: >
            matrix_value=${{ matrix.python }}
            file_based_prediction=true

      - name: Unit tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pipenv run python -m pytest tests -vvv --log-cli-level=DEBUG